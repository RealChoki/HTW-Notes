--Aufgabe 1 (2 Punkte) Anzahl Bestellungpositionen pro Kategorie der Ebene 2. Es sollen nur solche Kategorien ausgegeben werden, die mehr als 20000 Bestellungen haben. Sortiert nach KID.

SELECT 
    k.kid,
    k.bez,
    count(*) AS anzahl_bestellungen
FROM kategorie k 
    INNER JOIN kategorie k2 ON k.kid = k2.oberkategorie
    INNER JOIN produktkategorie pk ON k2.kid = pk.kid 
    INNER JOIN produkt p ON pk.pid = p.pid 
    INNER JOIN bestellposition bp ON p.pid = bp.pid 
WHERE k.ebene = 2
GROUP BY k.kid, k.bez
HAVING count(*) > 20000
ORDER BY k.kid;

--Aufgabe 2 (6 Punkte) Umsatz im Verkaufsgebiet ’Nordwest’ über alle Monate des Jahres 2019.

SELECT
    EXTRACT (YEAR FROM b.bestelldatum) AS jahr,
    EXTRACT (MONTH FROM b.bestelldatum) AS monat,
    SUM(b.gesamtpreis) AS umsatz
FROM
    verkaufsgebiet vg
    INNER JOIN verkaufsgebiet vg2 ON vg.vgid = vg2.obergebiet
    INNER JOIN kunde k ON vg2.vgid = k.vgid
    INNER JOIN bestellung b ON k.kid = b.kid
WHERE vg.bez = 'Nordwest' AND EXTRACT (YEAR FROM b.bestelldatum) = 2019
GROUP BY EXTRACT (YEAR FROM b.bestelldatum), EXTRACT (MONTH FROM b.bestelldatum)
ORDER BY umsatz DESC;

--Aufgabe 3 (4 Punkte) Umsatz pro Jahr und Verkaufsgebiet für die Jahre 2018 und 2019. Umsatz ist Summe Gesamtpreise der Bestellungen. Sortiert nach Jahr und Verkaufsgebietbezeichnung.

SELECT 
    EXTRACT(YEAR FROM bestelldatum) AS jahr, 
    vg.bez AS verkaufsgebiet, 
    sum(gesamtpreis) AS umsatz
FROM verkaufsgebiet vg
    INNER JOIN kunde k ON vg.vgid = k.vgid 
    INNER JOIN bestellung b ON k.kid = b.kid 
WHERE  EXTRACT(YEAR FROM bestelldatum) IN (2018, 2019)
GROUP BY EXTRACT(YEAR FROM bestelldatum), vg.bez
ORDER BY jahr, vg.bez;

--Aufgabe 4 (6 Punkte) Erste Bestellung im Januar 2019.

SELECT 
    bid,
    kid,
    TO_CHAR(bestelldatum, 'YYYY-MM-DD') AS bestelldatum,
    gesamtpreis
FROM bestellung 
WHERE 
    EXTRACT(YEAR FROM bestelldatum) = 2019 AND 
    EXTRACT(MONTH FROM bestelldatum) = 1
ORDER BY bestelldatum ASC
FETCH FIRST ROW ONLY;

--Aufgabe 5 (6 Punkte) Produkte mit ihrer Haupt- und Nebenkategorie, für alle Produkte, in deren Bezeichnungen ’tisch’ oder ’sessel’ vorkommen. Sortiert nach PID.

SELECT 
    p.pid, 
    p.bez, 
    MAX(CASE WHEN pk.hk = 'J' THEN k.bez END) AS hauptkategorie, 
    NVL(MAX(CASE WHEN pk.hk = 'N' THEN k.bez END), ' ') AS nebenkategorie
FROM produkt p 
    INNER JOIN produktkategorie pk ON p.pid = pk.pid
    INNER JOIN kategorie k ON pk.kid = k.kid
WHERE p.bez LIKE '%tisch%' OR p.bez LIKE '%sessel%'
GROUP BY p.pid, p.bez
ORDER BY p.pid;

-- Aufgabe 6 (6 Punkte) Anzahl der Bestellungen, bei denen es Teillieferungen gab. Das sind solche Bestellungungen, zu denen mindestens zwei Versandaktionen gehören.

WITH count_versandpositionen AS(
    SELECT bid, count(DISTINCT vid)
    FROM bestellposition
    GROUP BY bid
    HAVING count(DISTINCT vid) > 1
    ORDER BY bid)
SELECT count(*) AS Anzahl_Bestellungen_mit_Teillieferungen
FROM count_versandpositionen;
