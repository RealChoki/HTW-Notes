1+3
6*2
log(100)
2^2
a<-1
a+1
a
a=8
a=2
b=2
abx=99
a ->1
a -> a
a
31 -> boob
hello = 22
rm(a,abx,b,boob,hello)
a <- gl
rm(a)
a <- hello
a <- True
a <- TRUE
F
F
F = 1
F
F
rm(F)
F
F
arr = c(1,2,3,4,5)
arr= c(1,2,3,4,5,6,7,8)
arra = c(1,2,3,4,5,655)
arr[0]
arr[1]
arr[2]
1:10
4:3
4:22
a = c(221,2,144,2,1,0)
1:5
a -> 1:5
a = c(1,2,3,4,5)
a[-(1:3)]
a[-(1,4)]
a[-c(1,4)]
getwd()
setwd(C:/Users/rafaa/Desktop/HTW MODULE/Semester 3/Statistik/R datei)
setwd(C:\Users\rafaa\Desktop\HTW MODULE\Semester 3\Statistik\R datei)
setwd(C:Users\rafaa\Desktop\HTW MODULE\Semester 3\Statistik\R datei)
setwd("C:\Users\rafaa\Desktop\HTW MODULE\Semester 3\Statistik\R datei")
setwd("C:\Users\rafaa\Desktop\HTW MODULE\Semester 3\Statistik\R datei")
setwd("~/C:/Users/rafaa/Desktop/HTW MODULE/Semester 3/Statistik/R datei")
setwd("~/Users/rafaa/Desktop/HTW MODULE/Semester 3/Statistik/R datei")
setwd("Users/rafaa/Desktop/HTW MODULE/Semester 3/Statistik/R datei")
a + b
a <- 6
b <- 4
a + b
a <- 6
b <- 4
a + b
library(ggplot2)
install.packages("forecast")
library(ggplot2)
x <- 1:5
y <- x^2
plot(x,y)
plot(x,x)
clear
getwd()
setwd("C:/Users/rafaa/Desktop/HTW MODULE/Semester 3/Statistik/R datei")
getwd()
search()
is()
objects()
installed.packages()
search("MASS")
install.packages("MASS")
remove.packages("MASS", lib="C:/Program Files/R/R-4.3.3/library")
library(MASS)
detach("MASS")
detach("package:MASS")
library(MASS)
detach("package:MASS")
library(MASS)
detach("package:MASS")
library(MASS)
search()
?sort
a+b
a <- 3
b <- 2
a+b
a*b
sqrt(2)
TRUE & FALSE
TRUE && FALSE
TRUE &&& FALSE
TRUE == FALSE
TRUE | FALSE
pi^2
round(pi^2,2)
round(pi^2,8
)
round(pi^2,8)
#1. Übung Statistik
vektor1 <- c(1:10)
vektor1
count(vektor1)
length(vektor1)
length(vektor1)
#Sortieren Sie mit dem Befehl sort den Vektor vektor1 der Größe nach, einmal beginnend mit dem kleinsten und einmal beginnend mit dem größten
#Element.
sort(vektor1)
rev(sort(vektor1))
#Berechnen Sie die Summe aller Elemente des Vektors vektor1.
sum(vektor1)
#Berechnen Sie das Produkt aller Elemente des Vektors vektor1.
prod(vektor1)
?prod
#Erzeugen Sie einen weiteren Vektor vektor2 analog zum ersten und berechnen
#Sie die Summe der beiden Vektoren (Vektoraddition, nicht die Summe der Elemente).
#Weisen Sie das Ergebnis der Variable vektorSumme zu.
vektor2 <- c(1:5)
vektorSumme <- sum(vektor1,vektor2)
vektorSumme
rem(vektorSumme)
re(vektorSumme)
rm(vektorSumme)
vektorSumme <- c(vektor1,vektor2)
vektorSumme
vektor3 <- c(10:15)
#Erzeugen Sie einen weiteren Vektor vektor2 analog zum ersten und berechnen
#Sie die Summe der beiden Vektoren (Vektoraddition, nicht die Summe der Elemente).
#Weisen Sie das Ergebnis der Variable vektorSumme zu.
vektor2 <- c(11:15)
vektorSumme <- c(vektor1,vektor2)
rm(vektor3)
vektorSumme
#Lassen Sie sich in der Konsole das vierte Element des Vektors vektorSumme
#ausgeben, indem Sie den Vektor entsprechend indizieren
vektorSumme[4]
?seq
#Erzeugen Sie unter Verwendung des Befehls seq einen Vektor vektor3, der
#alle ganzen Zahlen zwischen 0 und 100 (einschließlich 0 und 100!) enthält,
#die durch 5 teilbar sind.
vektor3 <- seq(from = 1, to = 100)
vektor3
#Erzeugen Sie unter Verwendung des Befehls seq einen Vektor vektor3, der
#alle ganzen Zahlen zwischen 0 und 100 (einschließlich 0 und 100!) enthält,
#die durch 5 teilbar sind.
vektor3 <- seq(from = 0, to = 100)
vektor3
#Erzeugen Sie unter Verwendung des Befehls seq einen Vektor vektor3, der
#alle ganzen Zahlen zwischen 0 und 100 (einschließlich 0 und 100!) enthält,
#die durch 5 teilbar sind.
vektor3 <- seq(from = 0, to = 100) %% 5
vektor3
#Erzeugen Sie unter Verwendung des Befehls seq einen Vektor vektor3, der
#alle ganzen Zahlen zwischen 0 und 100 (einschließlich 0 und 100!) enthält,
#die durch 5 teilbar sind.
vektor3 <- seq(from = 0, to = 100, by = 5)
vektor3
#Erzeugen Sie unter Verwendung des Befehls seq einen Vektor vektor3, der
#alle ganzen Zahlen zwischen 0 und 100 (einschließlich 0 und 100!) enthält,
#die durch 5 teilbar sind.
vektor3 <- seq(0, 100, 5)
vektor3
#Erzeugen Sie unter Verwendung des Befehls seq einen Vektor vektor3, der
#alle ganzen Zahlen zwischen 0 und 100 (einschließlich 0 und 100!) enthält,
#die durch 5 teilbar sind.
vektor3 <- seq(from = 0, to = 100, by = 5)
vektor3
#Verbinden Sie die beiden Vektoren vektor2 und vektor3 mithilfe des Befehls
#c zu einem neuen Vektor vektor4 und lassen Sie sich in der Konsole die Länge
#des neuen Vektors ausgeben.
vektor4 <- c(vektor2,vektor3)
vektor4
length(vektor4)
rev(sort(vektor1))
vektorSumme <- vektor1 + vektor2
vektorSumme <- vektor1 + vektor2
vektorSumme
#Lassen Sie sich in der Konsole das vierte Element des Vektors vektorSumme
#ausgeben, indem Sie den Vektor endstsprechend indizieren
vektorSumme[4]
#Verbinden Sie die beiden Vektoren vektor2 und vektor3 mithilfe des Befehls
#c zu einem neuen Vektor vektor4 und lassen Sie sich in der Konsole die Länge
#des neuen Vektors ausgeben.
vektor4 <- c(vektor2,vektor3)
length(vektor4)
