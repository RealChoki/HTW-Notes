options(knitr.kable.NA='') # zeige NAs als Leerzeichen
betriebe <- matrix(c(639,64,41,744,487,131,41,659,203,153,33,389,54,91,17,162,
46,112,18,176,1429,551,NA,NA),
nrow=6,ncol=4,byrow=T,
dimnames=list(c("[0,50)", "[50, 180)",
"[180, 500)", "[500, 1000)", ">= 1000", "Summe"),
c("Vollzeit", "Nebenerwerb", "Pacht", "Summe")))
kable(betriebe)
library(knitr)
options(knitr.kable.NA='') # zeige NAs als Leerzeichen
betriebe <- matrix(c(639,64,41,744,487,131,41,659,203,153,33,389,54,91,17,162,
46,112,18,176,1429,551,150,NA),
nrow=6,ncol=4,byrow=T,
dimnames=list(c("[0,50)", "[50, 180)",
"[180, 500)", "[500, 1000)", ">= 1000", "Summe"),
c("Vollzeit", "Nebenerwerb", "Pacht", "Summe")))
kable(betriebe)
library(knitr)
options(knitr.kable.NA='') # zeige NAs als Leerzeichen
betriebe <- matrix(c(639,64,41,744,487,131,41,659,203,153,33,389,54,91,17,162,
46,112,18,176,1429,551,150,2130),
nrow=6,ncol=4,byrow=T,
dimnames=list(c("[0,50)", "[50, 180)",
"[180, 500)", "[500, 1000)", ">= 1000", "Summe"),
c("Vollzeit", "Nebenerwerb", "Pacht", "Summe")))
kable(betriebe)
c(639,64,41) / 744
c(639,64,41) / 744 * 100
round(c(639,64,41) / 744 * 100,3)
round(c(639,64,41) / 744 * 100,3)
round(c(487,131,41) / 659 * 100,3)
round(c(203,153,33) / 389 * 100,3)
round(c(54,91,17) / 162 * 100,3)
round(c(46,112,18) / 176 * 100,3)
noten <- read.csv("C:/Users/rafaa/Desktop/HTW MODULE/Semester 3/Statistik/data/noten_mathematik_englisch.csv")
kable(head(noten))
matrix(noten)
noten_matrix <- matrix(noten)
library(knitr)
noten_matrix <- matrix(noten)
kable(noten_matrix)
View(noten)
View(noten)
noten_matrix <- matrix(noten, nrow=6,ncol=4,byrow=T, c("Vollzeit", "Nebenerwerb", "Pacht", "Summe")))
kable(noten_matrix)
noten_matrix <- matrix(noten, nrow=6,ncol=4,byrow=T, c("Vollzeit", "Nebenerwerb", "Pacht", "Summe")))
noten_matrix <- matrix(noten, c("Vollzeit", "Nebenerwerb", "Pacht", "Summe")))
library(knitr)
noten_matrix <- matrix(noten, c("Vollzeit", "Nebenerwerb", "Pacht", "Summe"))
library(knitr)
noten_matrix <- matrix(noten)
kable(noten_matrix)
noten_matrix <- matrix(noten$Mathematik)
kable(noten_matrix)
View(noten)
View(noten)
# Beispielhafte Daten erstellen
set.seed(123) # Für Reproduzierbarkeit
noten <- data.frame(
Mathematik = sample(c("Sehr gut", "Gut", "Befriedigend", "Ausreichend", "Mangelhaft"), 70, replace = TRUE),
Englisch = sample(c("Sehr gut", "Gut", "Befriedigend", "Ausreichend", "Mangelhaft"), 70, replace = TRUE)
)
# Kontingenztabelle mit addmargins erstellen
kontingenztabelle <- addmargins(table(noten$Mathematik, noten$Englisch))
# Formatierung mit kable
library(knitr)
options(knitr.kable.NA='') # Zeige NAs als Leerzeichen
kable(kontingenztabelle, caption = "Kontingenztabelle mit Randverteilungen")
# Beispielhafte Daten erstellen
set.seed(123) # Für Reproduzierbarkeit
noten <- data.frame(
Mathematik = sample(c("Sehr gut", "Gut", "Befriedigend", "Ausreichend", "Mangelhaft"), 70, replace = TRUE),
Englisch = sample(c("Sehr gut", "Gut", "Befriedigend", "Ausreichend", "Mangelhaft"), 70, replace = TRUE)
)
# Kontingenztabelle mit addmargins erstellen
kontingenztabelle <- addmargins(table(noten$Mathematik, noten$Englisch))
# Formatierung mit kable
library(knitr)
options(knitr.kable.NA='') # Zeige NAs als Leerzeichen
kable(kontingenztabelle, caption = "Kontingenztabelle mit Randverteilungen")
# Beispielhafte Daten erstellen
noten <- data.frame(
Mathematik = sample(c("Sehr gut", "Gut", "Befriedigend", "Ausreichend", "Mangelhaft"), 70, replace = TRUE),
Englisch = sample(c("Sehr gut", "Gut", "Befriedigend", "Ausreichend", "Mangelhaft"), 70, replace = TRUE)
)
# Kontingenztabelle mit addmargins erstellen
kontingenztabelle <- addmargins(table(noten$Mathematik, noten$Englisch))
# Formatierung mit kable
library(knitr)
options(knitr.kable.NA='') # Zeige NAs als Leerzeichen
kable(kontingenztabelle, caption = "Kontingenztabelle mit Randverteilungen")
# Beispielhafte Daten erstellen
noten <- data.frame(
Mathematik = sample(c("Sehr gut", "Gut", "Befriedigend", "Ausreichend", "Mangelhaft"), 70, replace = TRUE),
Englisch = sample(c("Sehr gut", "Gut", "Befriedigend", "Ausreichend", "Mangelhaft"), 70, replace = TRUE)
)
# Kontingenztabelle erstellen
kontingenztabelle <- table(noten$Mathematik, noten$Englisch)
# Randverteilungen hinzufügen
kontingenztabelle_mit_randsummen <- addmargins(kontingenztabelle)
# Formatierung mit kable
library(knitr)
options(knitr.kable.NA='') # Zeige NAs als Leerzeichen
kable(kontingenztabelle_mit_randsummen, caption = "Kontingenztabelle mit Randverteilungen")
View(betriebe)
View(betriebe)
View(kontingenztabelle_mit_randsummen)
View(noten)
View(noten)
View(noten)
View(noten)
# Kontingenztabelle erstellen
kontingenztabelle <- table(noten$Mathematik, noten$Englisch)
kontingenztabelle
kontingenztabelle_mit_randsummen
View(noten)
kable(noten)
kable(noten)
kable(noten)
noten <- read.csv("C:/Users/rafaa/Desktop/HTW MODULE/Semester 3/Statistik/data/noten_mathematik_englisch.csv")
kable(noten)
noten <- read.csv("C:/Users/rafaa/Desktop/HTW MODULE/Semester 3/Statistik/data/noten_mathematik_englisch.csv")
kable(noten)
kontingenztabelle
# Beispielhafte Daten erstellen
noten <- data.frame(
Mathematik = sample(c("Sehr gut", "Gut", "Befriedigend", "Ausreichend", "Mangelhaft"), 70, replace = TRUE),
Englisch = sample(c("Sehr gut", "Gut", "Befriedigend", "Ausreichend", "Mangelhaft"), 70, replace = TRUE)
)
# Kontingenztabelle erstellen
kontingenztabelle <- table(noten$Mathematik, noten$Englisch)
kontingenztabelle
# Randverteilungen hinzufügen
kontingenztabelle_mit_randsummen <- addmargins(kontingenztabelle)
kontingenztabelle_mit_randsummen
# Formatierung mit kable
library(knitr)
options(knitr.kable.NA='') # Zeige NAs als Leerzeichen
kable(kontingenztabelle_mit_randsummen, caption = "Kontingenztabelle mit Randverteilungen")
View(noten)
rm(noten)
# Kontingenztabelle erstellen
kontingenztabelle <- table(noten$Mathematik, noten$Englisch)
rm(noten)
# Kontingenztabelle erstellen
kontingenztabelle <- table(noten$Mathematik, noten$Englisch)
noten <- read.csv("C:/Users/rafaa/Desktop/HTW MODULE/Semester 3/Statistik/data/noten_mathematik_englisch.csv")
kable(noten)
# Kontingenztabelle erstellen
kontingenztabelle <- table(noten$Mathematik, noten$Englisch)
kontingenztabelle
# Randverteilungen hinzufügen
kontingenztabelle_mit_randsummen <- addmargins(kontingenztabelle)
kontingenztabelle_mit_randsummen
# Formatierung mit kable
library(knitr)
options(knitr.kable.NA='') # Zeige NAs als Leerzeichen
kable(kontingenztabelle_mit_randsummen, caption = "Kontingenztabelle mit Randverteilungen")
kontingenztabelle
# Randverteilungen hinzufügen
kontingenztabelle_mit_randsummen <- addmargins(kontingenztabelle)
kontingenztabelle_mit_randsummen
View(noten)
# Kontingenztabelle erstellen
kontingenztabelle <- table(noten$Mathematik, noten$Englisch)
kontingenztabelle
# Randverteilungen hinzufügen
kontingenztabelle_mit_randsummen <- addmargins(kontingenztabelle)
kontingenztabelle_mit_randsummen
# Formatierung mit kable
library(knitr)
options(knitr.kable.NA='') # Zeige NAs als Leerzeichen
kable(kontingenztabelle_mit_randsummen, caption = "Kontingenztabelle mit Randverteilungen")
# Beispielhafte Daten erstellen
noten <- data.frame(
Mathematik = sample(c("Sehr gut", "Gut", "Befriedigend", "Ausreichend", "Mangelhaft"), 70, replace = TRUE),
Englisch = sample(c("Sehr gut", "Gut", "Befriedigend", "Ausreichend", "Mangelhaft"), 70, replace = TRUE)
)
# Kontingenztabelle erstellen
kontingenztabelle <- table(noten$Mathematik, noten$Englisch)
kontingenztabelle
# Randverteilungen hinzufügen
kontingenztabelle_mit_randsummen <- addmargins(kontingenztabelle)
kontingenztabelle_mit_randsummen
# Formatierung mit kable
library(knitr)
options(knitr.kable.NA='') # Zeige NAs als Leerzeichen
kable(kontingenztabelle_mit_randsummen, caption = "Kontingenztabelle mit Randverteilungen")
rm(noten)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
options(knitr.kable.NA='') # zeige NAs als Leerzeichen
betriebe <- matrix(c(639,64,41,744,487,131,41,659,203,153,33,389,54,91,17,162,
46,112,18,176,1429,551,150,2130),
nrow=6,ncol=4,byrow=T,
dimnames=list(c("[0,50)", "[50, 180)",
"[180, 500)", "[500, 1000)", ">= 1000", "Summe"),
c("Vollzeit", "Nebenerwerb", "Pacht", "Summe")))
kable(betriebe)
round(c(639,64,41) / 744 * 100,3)
round(c(487,131,41) / 659 * 100,3)
round(c(203,153,33) / 389 * 100,3)
round(c(54,91,17) / 162 * 100,3)
round(c(46,112,18) / 176 * 100,3)
noten <- read.csv("C:/Users/rafaa/Desktop/HTW MODULE/Semester 3/Statistik/data/noten_mathematik_englisch.csv")
kable(noten)
# Kontingenztabelle erstellen
kontingenztabelle <- table(noten$Mathematik, noten$Englisch)
kontingenztabelle
# Randverteilungen hinzufügen
kontingenztabelle_mit_randsummen <- addmargins(kontingenztabelle)
kontingenztabelle_mit_randsummen
# Formatierung mit kable
library(knitr)
options(knitr.kable.NA='') # Zeige NAs als Leerzeichen
kable(kontingenztabelle_mit_randsummen, caption = "Kontingenztabelle mit Randverteilungen")
# Relative Häufigkeiten berechnen
relative_haeufigkeiten <- prop.table(kontingenztabelle) * 100
# Randverteilungen hinzufügen
relative_haeufigkeiten_mit_randsummen <- addmargins(relative_haeufigkeiten)
# Runden auf drei Nachkommastellen
relative_haeufigkeiten_mit_randsummen <- round(relative_haeufigkeiten_mit_randsummen, 3)
# Formatierung mit kable
kable(relative_haeufigkeiten_mit_randsummen, caption = "Relative Häufigkeiten in Prozent mit Randverteilungen")
library(knitr)
options(knitr.kable.NA='') # zeige NAs als Leerzeichen
betriebe <- matrix(c(639,64,41,744,487,131,41,659,203,153,33,389,54,91,17,162,
46,112,18,176,1429,551,150,2130) / 2130,
nrow=6,ncol=4,byrow=T,
dimnames=list(c("[0,50)", "[50, 180)",
"[180, 500)", "[500, 1000)", ">= 1000", "Summe"),
c("Vollzeit", "Nebenerwerb", "Pacht", "Summe")))
kable(betriebe)
library(knitr)
options(knitr.kable.NA='') # zeige NAs als Leerzeichen
betriebe <- matrix(round(c(639,64,41,744,487,131,41,659,203,153,33,389,54,91,17,162,
46,112,18,176,1429,551,150,2130) / 2130,3),
nrow=6,ncol=4,byrow=T,
dimnames=list(c("[0,50)", "[50, 180)",
"[180, 500)", "[500, 1000)", ">= 1000", "Summe"),
c("Vollzeit", "Nebenerwerb", "Pacht", "Summe")))
kable(betriebe)
library(knitr)
options(knitr.kable.NA='') # zeige NAs als Leerzeichen
betriebe <- matrix(round(c(639,64,41,744,487,131,41,659,203,153,33,389,54,91,17,162,
46,112,18,176,1429,551,150,2130) / 2130 * 100,3),
nrow=6,ncol=4,byrow=T,
dimnames=list(c("[0,50)", "[50, 180)",
"[180, 500)", "[500, 1000)", ">= 1000", "Summe"),
c("Vollzeit", "Nebenerwerb", "Pacht", "Summe")))
kable(betriebe)
# Relative Häufigkeiten berechnen
rm(relative_haeufigkeiten)
# Randverteilungen hinzufügen
rm(relative_haeufigkeiten_mit_randsummen)
# Runden auf drei Nachkommastellen
rm(relative_haeufigkeiten_mit_randsummen)
relative_haeufigkeiten_mit_randsummen <- round(kontingenztabelle_mit_randsummen / 70 * 100,3)
# Formatierung mit kable
kable(relative_haeufigkeiten_mit_randsummen, caption = "Relative Häufigkeiten in Prozent mit Randverteilungen")
# Kontingenztabelle erstellen
kontingenztabelle <- table(noten$Mathematik, noten$Englisch)
kontingenztabelle
# Randverteilungen hinzufügen
kontingenztabelle_mit_randsummen <- addmargins(kontingenztabelle)
kontingenztabelle_mit_randsummen
knitr::opts_chunk$set(echo = TRUE)
mosaic(kontingenztabelle, shade = TRUE, legend = TRUE, main = "Mosaikplot der Noten in Mathematik und Englisch")
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
options(knitr.kable.NA='') # zeige NAs als Leerzeichen
betriebe <- matrix(c(639,64,41,744,487,131,41,659,203,153,33,389,54,91,17,162,
46,112,18,176,1429,551,150,2130),
nrow=6,ncol=4,byrow=T,
dimnames=list(c("[0,50)", "[50, 180)",
"[180, 500)", "[500, 1000)", ">= 1000", "Summe"),
c("Vollzeit", "Nebenerwerb", "Pacht", "Summe")))
kable(betriebe)
library(knitr)
options(knitr.kable.NA='') # zeige NAs als Leerzeichen
betriebe <- matrix(round(c(639,64,41,744,487,131,41,659,203,153,33,389,54,91,17,162,
46,112,18,176,1429,551,150,2130) / 2130 * 100,3),
nrow=6,ncol=4,byrow=T,
dimnames=list(c("[0,50)", "[50, 180)",
"[180, 500)", "[500, 1000)", ">= 1000", "Summe"),
c("Vollzeit", "Nebenerwerb", "Pacht", "Summe")))
kable(betriebe)
noten <- read.csv("C:/Users/rafaa/Desktop/HTW MODULE/Semester 3/Statistik/data/noten_mathematik_englisch.csv")
kable(noten)
# Kontingenztabelle erstellen
kontingenztabelle <- table(noten$Mathematik, noten$Englisch)
kontingenztabelle
# Randverteilungen hinzufügen
kontingenztabelle_mit_randsummen <- addmargins(kontingenztabelle)
kontingenztabelle_mit_randsummen
# Formatierung mit kable
library(knitr)
options(knitr.kable.NA='') # Zeige NAs als Leerzeichen
kable(kontingenztabelle_mit_randsummen, caption = "Kontingenztabelle mit Randverteilungen")
relative_haeufigkeiten_mit_randsummen <- round(kontingenztabelle_mit_randsummen / 70 * 100,3)
# Formatierung mit kable
kable(relative_haeufigkeiten_mit_randsummen, caption = "Relative Häufigkeiten in Prozent mit Randverteilungen")
mosaic(kontingenztabelle, shade = TRUE, legend = TRUE, main = "Mosaikplot der Noten in Mathematik und Englisch")
library(vcd)
install.packages("vcd")
library(vcd)
mosaic(kontingenztabelle, shade = TRUE, legend = TRUE, main = "Mosaikplot der Noten in Mathematik und Englisch")
library(vcd)
mosaic(kontingenztabelle, main = "Mosaikplot der Noten in Mathematik und Englisch")
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
options(knitr.kable.NA='') # zeige NAs als Leerzeichen
betriebe <- matrix(c(639,64,41,744,487,131,41,659,203,153,33,389,54,91,17,162,
46,112,18,176,1429,551,150,2130),
nrow=6,ncol=4,byrow=T,
dimnames=list(c("[0,50)", "[50, 180)",
"[180, 500)", "[500, 1000)", ">= 1000", "Summe"),
c("Vollzeit", "Nebenerwerb", "Pacht", "Summe")))
kable(betriebe)
library(knitr)
options(knitr.kable.NA='') # zeige NAs als Leerzeichen
betriebe <- matrix(round(c(639,64,41,744,487,131,41,659,203,153,33,389,54,91,17,162,
46,112,18,176,1429,551,150,2130) / 2130 * 100,3),
nrow=6,ncol=4,byrow=T,
dimnames=list(c("[0,50)", "[50, 180)",
"[180, 500)", "[500, 1000)", ">= 1000", "Summe"),
c("Vollzeit", "Nebenerwerb", "Pacht", "Summe")))
kable(betriebe)
noten <- read.csv("C:/Users/rafaa/Desktop/HTW MODULE/Semester 3/Statistik/data/noten_mathematik_englisch.csv")
kable(noten)
# Kontingenztabelle erstellen
kontingenztabelle <- table(noten$Mathematik, noten$Englisch)
kontingenztabelle
# Randverteilungen hinzufügen
kontingenztabelle_mit_randsummen <- addmargins(kontingenztabelle)
kontingenztabelle_mit_randsummen
# Formatierung mit kable
library(knitr)
options(knitr.kable.NA='') # Zeige NAs als Leerzeichen
kable(kontingenztabelle_mit_randsummen, caption = "Kontingenztabelle mit Randverteilungen")
relative_haeufigkeiten_mit_randsummen <- round(kontingenztabelle_mit_randsummen / 70 * 100,3)
# Formatierung mit kable
kable(relative_haeufigkeiten_mit_randsummen, caption = "Relative Häufigkeiten in Prozent mit Randverteilungen")
library(vcd)
mosaic(kontingenztabelle, shade = TRUE, legend = TRUE, main = "Mosaikplot der Noten in Mathematik und Englisch")
library(vcd)
mosaic(noten, shade = TRUE, legend = TRUE, main = "Mosaikplot der Noten in Mathematik und Englisch")
kontingenztabelle
library(vcd)
mosaic(kontingenztabelle, shade = TRUE, legend = TRUE, main = "Mosaikplot der Noten in Mathematik und Englisch")
library(vcd)
mosaicplot(kontingenztabelle, main = "Mosaikplot der Noten in Mathematik und Englisch", color = TRUE, las = 1)
library(vcd)
mosaicplot(kontingenztabelle, main = "Mosaikplot der Noten in Mathematik und Englisch")
library(vcd)
mosaicplot(kontingenztabelle, main = "Mosaikplot der Noten in Mathematik und Englisch", color = TRUE)
library(vcd)
mosaicplot(kontingenztabelle, main = "Mosaikplot der Noten in Mathematik und Englisch", color = TRUE, las = 1)
library(vcd)
mosaicplot(kontingenztabelle, main = "Mosaikplot der Noten in Mathematik und Englisch", color = TRUE, las = 2)
library(vcd)
mosaicplot(kontingenztabelle, main = "Mosaikplot der Noten in Mathematik und Englisch", color = TRUE, las = 1)
library(vcd)
mosaicplot(kontingenztabelle, main = "Mosaikplot der Noten in Mathematik und Englisch", color = TRUE)
library(vcd)
mosaicplot(kontingenztabelle, main = "Mosaikplot der Noten in Mathematik und Englisch", color = TRUE, las = 1)
mosaicplot(kontingenztabelle, main = "Mosaikplot der Noten in Mathematik und Englisch", color = TRUE, las = 1)
ausschlag <- matrix(c(223, 75, 107, 21), nrow=2, byrow=T,
dimnames=list(c("mit Salbe","ohne Salbe"), c("besser","schlimmer")))
kable(ausschlag)
ausschlag <- matrix(c(223, 75, 223+75 , 107, 21, 107 + 21), nrow=2, byrow=T,
dimnames=list(c("mit Salbe","ohne Salbe"), c("besser","schlimmer")))
ausschlag <- matrix(c(223, 75, 223+75 , 107, 21, 107 + 21), nrow=3, byrow=T,
dimnames=list(c("mit Salbe","ohne Salbe"), c("besser","schlimmer")))
ausschlag <- matrix(c(223, 75, 223+75 , 107, 21, 107 + 21), nrow=4, byrow=T,
dimnames=list(c("mit Salbe","ohne Salbe"), c("besser","schlimmer")))
ausschlag <- matrix(c(223, 75, 223+75 , 107, 21, 107 + 21), nrow=2, byrow=T,
dimnames=list(c("mit Salbe","ohne Salbe"), c("besser","schlimmer")))
ausschlag <- matrix(c(223, 75, 223+75 , 107, 21, 107 + 21), nrow=2, byrow=TRUE,
dimnames=list(c("mit Salbe","ohne Salbe"), c("besser","schlimmer")))
# Laden der notwendigen Bibliothek
library(knitr)
# Erstellen der Häufigkeitstabelle ohne Summen
ausschlag <- matrix(c(223, 75, 107, 21), nrow=2, byrow=TRUE,
dimnames=list(c("mit Salbe","ohne Salbe"), c("besser","schlimmer")))
# Hinzufügen der Summen
ausschlag_mit_summen <- addmargins(ausschlag)
# Anzeige der Tabelle
kable(ausschlag_mit_summen)
ausschlag <- matrix(c(223, 75, 223+75 , 107, 21, 107 + 21), nrow=2, byrow=TRUE,
dimnames=list(c("mit Salbe","ohne Salbe"), c("besser","schlimmer")))
ausschlag <- matrix(c(223, 75, 107, 21), nrow=2, byrow=T,
dimnames=list(c("mit Salbe","ohne Salbe"), c("besser","schlimmer")))
kable(ausschlag)
# Laden der notwendigen Bibliothek
library(knitr)
# Erstellen der Häufigkeitstabelle ohne Summen
ausschlag <- matrix(c(223, 75, 107, 21), nrow=2, byrow=TRUE,
dimnames=list(c("mit Salbe","ohne Salbe"), c("besser","schlimmer")))
# Hinzufügen der Summen
ausschlag_mit_summen <- addmargins(ausschlag)
# Anzeige der Tabelle
kable(ausschlag_mit_summen)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
options(knitr.kable.NA='') # zeige NAs als Leerzeichen
betriebe <- matrix(c(639,64,41,744,487,131,41,659,203,153,33,389,54,91,17,162,
46,112,18,176,1429,551,150,2130),
nrow=6,ncol=4,byrow=T,
dimnames=list(c("[0,50)", "[50, 180)",
"[180, 500)", "[500, 1000)", ">= 1000", "Summe"),
c("Vollzeit", "Nebenerwerb", "Pacht", "Summe")))
kable(betriebe)
library(knitr)
options(knitr.kable.NA='') # zeige NAs als Leerzeichen
betriebe <- matrix(round(c(639,64,41,744,487,131,41,659,203,153,33,389,54,91,17,162,
46,112,18,176,1429,551,150,2130) / 2130 * 100,3),
nrow=6,ncol=4,byrow=T,
dimnames=list(c("[0,50)", "[50, 180)",
"[180, 500)", "[500, 1000)", ">= 1000", "Summe"),
c("Vollzeit", "Nebenerwerb", "Pacht", "Summe")))
kable(betriebe)
noten <- read.csv("C:/Users/rafaa/Desktop/HTW MODULE/Semester 3/Statistik/data/noten_mathematik_englisch.csv")
kable(noten)
# Kontingenztabelle erstellen
kontingenztabelle <- table(noten$Mathematik, noten$Englisch)
kontingenztabelle
# Randverteilungen hinzufügen
kontingenztabelle_mit_randsummen <- addmargins(kontingenztabelle)
kontingenztabelle_mit_randsummen
# Formatierung mit kable
library(knitr)
options(knitr.kable.NA='') # Zeige NAs als Leerzeichen
kable(kontingenztabelle_mit_randsummen, caption = "Kontingenztabelle mit Randverteilungen")
relative_haeufigkeiten_mit_randsummen <- round(kontingenztabelle_mit_randsummen / 70 * 100,3)
# Formatierung mit kable
kable(relative_haeufigkeiten_mit_randsummen, caption = "Relative Häufigkeiten in Prozent mit Randverteilungen")
mosaicplot(kontingenztabelle, main = "Mosaikplot der Noten in Mathematik und Englisch", color = TRUE, las = 1)
# Laden der notwendigen Bibliothek
library(knitr)
# Erstellen der Häufigkeitstabelle ohne Summen
ausschlag <- matrix(c(223, 75, 107, 21), nrow=2, byrow=TRUE,
dimnames=list(c("mit Salbe","ohne Salbe"), c("besser","schlimmer")))
# Hinzufügen der Summen
ausschlag_mit_summen <- addmargins(ausschlag)
# Anzeige der Tabelle
kable(ausschlag_mit_summen)
kable(ausschlag_mit_summen / 426)
kable(round(ausschlag_mit_summen / 426 * 100,3))
sum(ausschlag)
kable(round(ausschlag_mit_summen / sum(ausschlag) * 100,3))
# Berechnung der bedingten relativen Häufigkeiten für die Zeilen
bedingte_relative_haeufigkeiten_zeilen <- prop.table(ausschlag, margin=1)
# Hinzufügen der Randsummen
bedingte_relative_haeufigkeiten_zeilen_mit_summen <- addmargins(bedingte_relative_haeufigkeiten_zeilen, 2)
# Anzeige der Tabelle der bedingten relativen Häufigkeiten
kable(bedingte_relative_haeufigkeiten_zeilen_mit_summen, digits = 3, format = "markdown")
bedingte_relative_haeufigkeiten_zeilen
# Berechnung der bedingten relativen Häufigkeiten für die Zeilen
bedingte_relative_haeufigkeiten_zeilen <- prop.table(ausschlag, margin=1)
bedingte_relative_haeufigkeiten_zeilen
# Hinzufügen der Randsummen
bedingte_relative_haeufigkeiten_zeilen_mit_summen <- addmargins(bedingte_relative_haeufigkeiten_zeilen, 2)
# Anzeige der Tabelle der bedingten relativen Häufigkeiten
kable(bedingte_relative_haeufigkeiten_zeilen_mit_summen, digits = 3, format = "markdown")
# Berechnung der bedingten relativen Häufigkeiten für die Zeilen
bedingte_relative_haeufigkeiten_zeilen <- prop.table(ausschlag, margin=1)
# Hinzufügen der Randsummen
bedingte_relative_haeufigkeiten_zeilen_mit_summen <- addmargins(bedingte_relative_haeufigkeiten_zeilen, 2)
# Anzeige der Tabelle der bedingten relativen Häufigkeiten
kable(bedingte_relative_haeufigkeiten_zeilen_mit_summen, digits = 3, format = "markdown")
# Berechnung der bedingten relativen Häufigkeiten für die Zeilen
bedingte_relative_haeufigkeiten_zeilen <- prop.table(ausschlag)
# Hinzufügen der Randsummen
bedingte_relative_haeufigkeiten_zeilen_mit_summen <- addmargins(bedingte_relative_haeufigkeiten_zeilen, 2)
# Anzeige der Tabelle der bedingten relativen Häufigkeiten
kable(bedingte_relative_haeufigkeiten_zeilen_mit_summen, digits = 3, format = "markdown")
#f(besser|mit Salbe) = n(besser, mit Salbe) / n(mit Salbe) = 223 / 298 = 0.75
#f(schlimmer|mit Salbe) = n(schlimmer, mit Salbe) / n(mit Salbe) = 75 / 298 = 0.25
#f(besser|ohne Salbe) = n(besser, ohne Salbe) / n(ohne Salbe) = 107 / 128 = 0.84
#f(schlimmer|ohne Salbe) = n(schlimmer, ohne Salbe) / n(ohne Salbe) = 21 / 128 = 0.16
# Berechnung der bedingten relativen Häufigkeiten für die Zeilen
bedingte_relative_haeufigkeiten_zeilen <- prop.table(ausschlag, margin=1)
# Hinzufügen der Randsummen
bedingte_relative_haeufigkeiten_zeilen_mit_summen <- addmargins(bedingte_relative_haeufigkeiten_zeilen, 2)
# Anzeige der Tabelle der bedingten relativen Häufigkeiten
kable(bedingte_relative_haeufigkeiten_zeilen_mit_summen, digits = 3, format = "markdown")
#f(besser|mit Salbe) = n(besser, mit Salbe) / n(mit Salbe) = 223 / 298 = 0.75
#f(schlimmer|mit Salbe) = n(schlimmer, mit Salbe) / n(mit Salbe) = 75 / 298 = 0.25
#f(besser|ohne Salbe) = n(besser, ohne Salbe) / n(ohne Salbe) = 107 / 128 = 0.84
#f(schlimmer|ohne Salbe) = n(schlimmer, ohne Salbe) / n(ohne Salbe) = 21 / 128 = 0.16
# Berechnung der bedingten relativen Häufigkeiten für die Zeilen
bedingte_relative_haeufigkeiten_zeilen <- prop.table(ausschlag, margin=1)
# Hinzufügen der Randsummen
bedingte_relative_haeufigkeiten_zeilen_mit_summen <- addmargins(bedingte_relative_haeufigkeiten_zeilen)
# Anzeige der Tabelle der bedingten relativen Häufigkeiten
kable(bedingte_relative_haeufigkeiten_zeilen_mit_summen, digits = 3, format = "markdown")
#f(besser|mit Salbe) = n(besser, mit Salbe) / n(mit Salbe) = 223 / 298 = 0.75
#f(schlimmer|mit Salbe) = n(schlimmer, mit Salbe) / n(mit Salbe) = 75 / 298 = 0.25
#f(besser|ohne Salbe) = n(besser, ohne Salbe) / n(ohne Salbe) = 107 / 128 = 0.84
#f(schlimmer|ohne Salbe) = n(schlimmer, ohne Salbe) / n(ohne Salbe) = 21 / 128 = 0.16
# Berechnung der bedingten relativen Häufigkeiten für die Zeilen
bedingte_relative_haeufigkeiten_zeilen <- prop.table(ausschlag, margin=1)
# Hinzufügen der Randsummen
bedingte_relative_haeufigkeiten_zeilen_mit_summen <- addmargins(bedingte_relative_haeufigkeiten_zeilen, 2)
# Anzeige der Tabelle der bedingten relativen Häufigkeiten
kable(bedingte_relative_haeufigkeiten_zeilen_mit_summen, digits = 3, format = "markdown")
#f(besser|mit Salbe) = n(besser, mit Salbe) / n(mit Salbe) = 223 / 298 = 0.75
#f(schlimmer|mit Salbe) = n(schlimmer, mit Salbe) / n(mit Salbe) = 75 / 298 = 0.25
#f(besser|ohne Salbe) = n(besser, ohne Salbe) / n(ohne Salbe) = 107 / 128 = 0.84
#f(schlimmer|ohne Salbe) = n(schlimmer, ohne Salbe) / n(ohne Salbe) = 21 / 128 = 0.16
mosaicplot(bedingte_relative_haeufigkeiten_zeilen, color = TRUE, las = 1)
